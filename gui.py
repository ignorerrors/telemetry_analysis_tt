import tkinter as tk
from tkinter import ttk, messagebox, filedialog
import sv_ttk
from data_loader import (
    load_telemetry_data,
    export_statistics_to_txt,
    export_plot_as_png,
)
from work_area import create_basic_info_tab, create_statics_tab, create_plots_tab
from work_area import create_categorized_tabs

class MainApplication(ttk.Frame):  # –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    def __init__(self, parent, *args, **kwargs):
        super().__init__(parent, *args, **kwargs)  # –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Ç –ø—Ä–µ–¥–∫–∞ Frame
        self.parent = parent
        self.parent.title("–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏")
        self.parent.geometry("1200x800")
        self.export_menu = None  # –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        self.df = None  # –•—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        self.create_plots_tab = None  # –ë—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è x, y –≥—Ä–∞—Ñ–∏–∫–æ–≤
        try:
            icon = tk.PhotoImage(file="static/ping.png")
            self.parent.iconphoto(True, icon)
        except:  # pylint: disable=W0702
            pass
        self.interface_style()
        self.interface_elements()
        self.setup_layout()

    def interface_style(self):
        sv_ttk.set_theme("light")

    def interface_elements(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.top_level_menu()
        self.notebook = ttk.Notebook(self.parent)  # –†–∞–±–æ—á–∞—è –æ–±–ª–∞—Å—Ç—å

        self.status_var = tk.StringVar()  # –°—Ç–∞—Ç—É—Å –±–∞—Ä
        self.status_var.set("–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")  # —É–±—Ä–∞–ª anchor=tk.W, relief=tk.GROOVE, –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ —Ç–µ–º–µ
        self.status_bar = ttk.Label(self.parent, textvariable=self.status_var)

    def setup_layout(self):
        """–†–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –æ–∫–Ω–µ"""
        self.notebook.pack(fill=tk.BOTH, expand=True, padx=5, pady=5)
        self.status_bar.pack(side=tk.BOTTOM, fill=tk.X, padx=10, pady=4)

    def top_level_menu(self):
        """–í–µ—Ä—Ö–Ω–µ–µ –º–µ–Ω—é"""
        menubar = tk.Menu(self.parent)
        self.parent.config(menu=menubar)

        file_menu = tk.Menu(
            menubar, tearoff=0
        )  # –î–æ–±–∞–≤–∏–ª –≤—ã–ø–∞–¥–∞—é—â–∏–µ –æ–∫–Ω–∞, –±–µ–∑ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏—è
        menubar.add_cascade(label="–§–∞–π–ª", menu=file_menu)
        file_menu.add_command(label="–û—Ç–∫—Ä—ã—Ç—å...", accelerator="Ctrl+O", command=self.btn_open)
        self.parent.bind("<Control-o>", lambda _: self.btn_open())  # –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
        file_menu.add_separator()
        file_menu.add_command(label="–í—ã—Ö–æ–¥", command=self.btn_exit)
        self.export_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–≠–∫—Å–ø–æ—Ä—Ç", menu=self.export_menu)  # –ü—É–Ω–∫—Ç 8.1.4 –≤ tt
        self.export_menu.add_command(label="–≠–∫—Å–ø–æ—Ä—Ç –≥—Ä–∞—Ñ–∏–∫–æ–≤...", state="disabled", command=self.export_graphs)
        self.export_menu.add_command(label="–≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...", state="disabled", command=self.export_stats)

        help_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ", menu=help_menu)
        help_menu.add_command(label="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", command=self.user_manual)
        help_menu.add_command(label="–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", command=self.btn_about)

    def create_tabs(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏"""
        # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≤–∫–ª–∞–¥–∫–∏
        for tab in self.notebook.tabs():
            self.notebook.forget(tab)

        create_basic_info_tab(self.notebook, self.df)
        create_statics_tab(self.notebook, self.df)
        self.create_plots_tab = create_plots_tab(self.notebook, self.df, self.status_var)
        create_categorized_tabs(self.notebook, self.df)

    def btn_open(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û—Ç–∫—Ä—ã—Ç—å'"""
        file_path = filedialog.askopenfilename(
            title="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏",
            filetypes=[("CSV files", "*.csv"), ("All files", "*.*")],
        )
        if file_path:
            self.status_var.set(f"–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞: {file_path}...")
            self.update_idletasks()  # –û–±–Ω–æ–≤–ª—è—é —Å—Ç–∞—Ç—É—Å-–±–∞—Ä
            try:
                self.df = load_telemetry_data(file_path)
                self.status_var.set(f"–£—Å–ø–µ—Ö! –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {len(self.df)} –∑–∞–ø–∏—Å–µ–π")
                self.enable_export_menus()
                self.create_tabs()
            except Exception as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª:\n{str(e)}")
                self.status_var.set("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞")

    def enable_export_menus(self):
        """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö"""
        self.export_menu.entryconfig(0, state="normal")  # 0, 1 - –ø—É–Ω–∫—Ç—ã –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–π –æ–±–ª–∞—Å—Ç–∏ '–≠–∫—Å–ø–æ—Ä—Ç'
        self.export_menu.entryconfig(1, state="normal")

    def export_graphs(self):
        """–≠–∫—Å–ø–æ—Ä—Ç –≥—Ä–∞—Ñ–∏–∫–æ–≤"""
        default_filename = "telemetry_graph.png"
        file_path = filedialog.asksaveasfilename(
            title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
            initialfile=default_filename,
            defaultextension=".png",
            filetypes=[
                ("PNG files", "*.png"),
                ("PDF files", "*.pdf"),
                ("–í—Å–µ —Ñ–∞–π–ª—ã", "*.*"),
            ],
        )

        if file_path:
            try:
                a = export_plot_as_png(self.df, self.create_plots_tab, file_path)
                a.savefig(file_path, dpi=300, bbox_inches="tight")
                self.status_var.set(f"–ì—Ä–∞—Ñ–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫: {file_path}")
                messagebox.showinfo(
                    "–£—Å–ø–µ—Ö", f"–ì—Ä–∞—Ñ–∏–∫ —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤:\n{file_path}"
                )
            except Exception as e:
                messagebox.showerror(
                    "–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫:\n{str(e)}"
                )

    def export_stats(self):
        """–≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        default_filename = "telemetry_statistics.txt"
        file_path = filedialog.asksaveasfilename(
            title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
            initialfile=default_filename,
            defaultextension=".txt",
            filetypes=[("–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã", "*.txt"), ("–í—Å–µ —Ñ–∞–π–ª—ã", "*.*")],
        )

        if file_path:
            try:
                export_statistics_to_txt(self.df, file_path)
                self.status_var.set(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞: {file_path}")
                messagebox.showinfo("–£—Å–ø–µ—Ö", f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤:\n{file_path}")
            except Exception as e:
                messagebox.showerror(
                    "–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:\n{str(e)}",
                )

    def user_manual(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'"""
        about_text = """
        üìñ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        üóÇÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        –û—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é –§–∞–π–ª ‚Üí –û—Ç–∫—Ä—ã—Ç—å (Ctrl+O)
        –í—ã–±–µ—Ä–∏—Ç–µ CSV —Ñ–∞–π–ª —Å —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–µ–π
        –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∑—è—Ç—Å—è –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è
        üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        –í–∫–ª–∞–¥–∫–∞ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–∞–∂–¥–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É
        –í–∫–ª—é—á–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ/–º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, —Å—Ä–µ–¥–Ω–µ–µ, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        üìà –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤
        –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–ì—Ä–∞—Ñ–∏–∫–∏"
        –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Å–µ–π X –∏ Y –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
        –ù–∞–∂–º–∏—Ç–µ "–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫"
        –ì—Ä–∞—Ñ–∏–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç—Å—è —Å —Å–µ—Ç–∫–æ–π –∏ –ø–æ–¥–ø–∏—Å—è–º–∏ –æ—Å–µ–π
        üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
        –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –ø–æ–ª–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        –≠–∫—Å–ø–æ—Ä—Ç –≥—Ä–∞—Ñ–∏–∫–æ–≤ - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≥—Ä–∞—Ñ–∏–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG/PDF
        –ü–†–ò–ú–ï–ß–ê–ù–ò–ï:
        ‚Ä¢ –ï—Å–ª–∏ –µ—â—ë –Ω–µ –±—ã–ª –ø–æ—Å—Ç—Ä–æ–µ–Ω –Ω–µ –æ–¥–∏–Ω –≥—Ä–∞—Ñ–∏–∫, —Ç–æ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –±—É–¥–µ—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω –≥—Ä–∞—Ñ–∏–∫ Timestamp | Timestamp
        """
        messagebox.showinfo("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", about_text, icon="question")

    def btn_about(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û –ø—Ä–æ–≥—Ä–∞–º–º–µ'"""
        about_text = """
        –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏
        –í–µ—Ä—Å–∏—è 0.2 (Pre-Alpha)
        
        –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
        –¥–∞–Ω–Ω—ã—Ö —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏ uav.
        
        https://github.com/raiserror/telemetry_analysis_tt
        """
        messagebox.showinfo("–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", about_text)

    def btn_exit(self):
        """–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        if messagebox.askyesno("–í—ã—Ö–æ–¥", "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?"):
            self.parent.quit()
